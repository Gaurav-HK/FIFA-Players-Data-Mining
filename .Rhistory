Attacking_WR <- unlist(Attacking_WR)
Defense_WR <- unlist(Defense_WR)
#Saving scraped content into a dataframe
(Season_15 <- as.data.frame(cbind(ID,Name,Age,Nationality,O_Rating,P_Rating,Growth,Club,Value,Wage,Game_Impact,Pos
(Season_15 <- as.data.frame(cbind(ID,Name,Age,Nationality,O_Rating,P_Rating,Growth,Club,Value,Wage,Game_Impact,Position,Attack,Defense,Acceleration,Stamina,Positioning,Penalties,GKeeping,Attacking_WR,Defense_WR)))
dim(Season_15)
head(Season_15)
str(Season_15)
summary(Season_15)
transform.data.frame(Season_15,ID=as.numeric(ID),Name=as.character(Name),Age=as.numeric(Age),Nationality=as.character(Nationality),O_Rating=as.numeric(O_Rating),P_Rating=as.numeric(P_Rating),Growth=as.numeric(Growth),Club=as.character(Club),Value=as.numeric(Value),Wage=as.numeric(Wage),Game_Impact=as.factor(Game_Impact),Position=as.character(Position),Attack=as.numeric(Attack),Defense=as.numeric(Defense),Acceleration=as.numeric(Acceleration),Stamina=as.numeric(Stamina),Positioning=as.numeric(Positioning),Penalties=as.numeric(Penalties),GKeeping=as.numeric(GKeeping),Attacking_WR=as.numeric(Attacking_WR),Defense_WR=as.numeric(Defense_WR))
library(readxl)
Season_15 <- read_excel("Season_15.xlsx")
setwd("C:/Users/jibin/OneDrive/Desktop/Soccer Analysis/Data Sets")
library(readxl)
Season_15 <- read_excel("Season_15.xlsx")
library(tidyselect)
require(tidyverse)
require(ggplot2)
require(compare)
require("gridExtra")
require(xlsx)
require(lattice)
require(Scale)
require(MASS)
require(dplyr)
library(readxl)
Season_15 <- read_excel("Season_15.xlsx")
library(readxl)
Season_15 <- read.excel("Season_15.xlsx")
Season_15
(Season_15 <- transform.data.frame(Season_15,ID=as.numeric(ID),Name=as.character(Name),Age=as.numeric(Age),Nationality=as.character(Nationality),O_Rating=as.numeric(O_Rating),P_Rating=as.numeric(P_Rating),Growth=as.numeric(Growth),Club=as.character(Club),Wage=as.numeric(Wage),Game_Impact=as.factor(Game_Impact),Position=as.character(Position),Attack=as.numeric(Attack),Defense=as.numeric(Defense),Acceleration=as.numeric(Acceleration),Stamina=as.numeric(Stamina),Positioning=as.numeric(Positioning),Penalties=as.numeric(Penalties),GKeeping=as.numeric(GKeeping),Attacking_WR=as.character(Attacking_WR),Defense_WR=as.character(Defense_WR)))
library(readxl)
Season_15 <- read_excel("Season_15.xlsx")
View(Season_15)
Season_15
library(readxl)
Season_16 <- read_excel("Season_16.xlsx")
View(Season_16)
library(readxl)
Season_17 <- read_excel("Season_17.xlsx")
View(Season_17)
library(readxl)
Season_18 <- read_excel("Season_18.xlsx")
View(Season_18)
library(readxl)
Season_19 <- read_excel("Season_19.xlsx")
View(Season_19)
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS2 <- merge(Merde,Season_17,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS2 <- merge(DS3,Season_17,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS1 <- merge(DS2,Season_18,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
(Data_Set <- merge(DS1,Season_19,all.x=TRUE,all.y=TRUE)) %>% arrange(desc(O_Rating))
# Few entries for market_value and wage has entries as zero. Changing them to NA to perform na.rm operations
Data_Set$Market_Value[ Merde3$Market_Value== 0] <- NA
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS2 <- merge(DS3,Season_17,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS1 <- merge(DS2,Season_18,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
(Data_Set <- merge(DS1,Season_19,all.x=TRUE,all.y=TRUE)) %>% arrange(desc(O_Rating))
# Few entries for market_value and wage has entries as zero. Changing them to NA to perform na.rm operations
Data_Set$Market_Value[ Data_Set$Market_Value== 0] <- NA
Data_Set$Wage[ Data_Set$Wage== 0] <- NA
Data_Set <- Data_Set %>% arrange(desc(O_Rating))
str(Data_Set)
summary(Data_Set)
Data_Set
mean(Data_Set$Age)
median(Data_Set$Age)
quantile(Data_Set$Age)
range(Data_Set$Age)
sd(Data_Set$Age)
var(Data_Set$Age)
hist(Data_Set$Age, col="light blue")
mean(Data_Set$O_Rating)
median(Data_Set$O_Rating)
quantile(Data_Set$O_Rating)
range(Data_Set$O_Rating)
sd(Data_Set$O_Rating)
var(Data_Set$O_Rating)
hist(Data_Set$O_Rating, col = "light blue")
mean(Data_Set$Wage, na.rm = TRUE)
median(Data_Set$Wage, na.rm = TRUE)
quantile(Data_Set$Wage, na.rm = TRUE)
range(Data_Set$Wage, na.rm = TRUE)
sd(Data_Set$Wage, na.rm = TRUE)
var(Data_Set$Wage, na.rm = TRUE)
ggplot(Data_Set, aes(x=Wage, y=O_Rating)) +
geom_boxplot() + scale_x_continuous(name="Wage", labels = scales::comma)
#boxplot(Data_Set$Wage)
(a1 <- Data_Set%>%group_by(Nationality)%>%summarise(overall_rating=mean(O_Rating))%>%arrange(desc(overall_rating)))
(a2 <- Data_Set%>% group_by(Nationality) %>% count())
DF=merge(a1,a2,by="Nationality") %>% arrange(desc(n))%>%head(10)
ggplot(DF, aes(x=overall_rating, y=n, color=Nationality))+geom_point() + labs(x="Average Rating",y= "Total Number of players")
require(scales)
require(ggplot2)
Merde4 <- Data_Set %>% filter(Season==2015)
ggplot(Season_15, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde5 <- Data_Set %>% filter(Season==2016)
ggplot(Merde5, aes(x=Overall_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde4 <- Data_Set %>% filter(Season==2015)
ggplot(Season_15, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde5 <- Data_Set %>% filter(Season==2016)
ggplot(Merde5, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde6 <- Data_Set %>% filter(Season==2017)
ggplot(Merde6, aes(x=O, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde4 <- Data_Set %>% filter(Season==2015)
ggplot(Season_15, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde5 <- Data_Set %>% filter(Season==2016)
ggplot(Merde5, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde6 <- Data_Set %>% filter(Season==2017)
ggplot(Merde6, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde7 <- Data_Set %>% filter(Season==2018)
ggplot(Merde7, aes(x=O, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde4 <- Data_Set %>% filter(Season==2015)
ggplot(Season_15, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde5 <- Data_Set %>% filter(Season==2016)
ggplot(Merde5, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde6 <- Data_Set %>% filter(Season==2017)
ggplot(Merde6, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde7 <- Data_Set %>% filter(Season==2018)
ggplot(Merde7, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde8 <- Data_Set %>% filter(Season==2019)
ggplot(Merde8, aes(x=O, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde4 <- Data_Set %>% filter(Season==2015)
ggplot(Season_15, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde5 <- Data_Set %>% filter(Season==2016)
ggplot(Merde5, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde6 <- Data_Set %>% filter(Season==2017)
ggplot(Merde6, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde7 <- Data_Set %>% filter(Season==2018)
ggplot(Merde7, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
Merde8 <- Data_Set %>% filter(Season==2019)
ggplot(Merde8, aes(x=O_Rating, y=Wage)) +
geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
#2015-2016
(Players_2015 = Data_Set %>% filter(Season==2015) %>% select (Name,Overall_Rating,Potential_Rating,Wage) %>% arrange(desc(Wage)))
#2015-2016
(Players_2015 = Data_Set %>% filter(Season==2015) %>% select (Name,O_Rating,Potential_Rating,Wage) %>% arrange(desc(Wage)))
require(dplyr)
#2015-2016
(Players_2015 = Data_Set %>% filter(Season==2015) %>% select (Name,O_Rating,Potential_Rating,Wage) %>% arrange(desc(Wage)))
require(MASS)
(Players_2015 = Data_Set %>% filter(Season==2015) %>% select (Name,O_Rating,Potential_Rating,Wage) %>% arrange(desc(Wage)))
#2015-2016
(Players_2015 = Data_Set %>% filter(Season==2015) %>% dplyr::select (Name,O_Rating,Potential_Rating,Wage) %>% arrange(desc(Wage)))
#2015-2016
(Players_2015 = Data_Set %>% filter(Season==2015) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2016=Data_Set %>% filter(Season==2016) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2015,Players_2016,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2015=O_Rating.x,PR_2015=P_Rating.x,OR_2016=O_Rating.y,PR_2016=P_Rating.y,Wage_2015=Wage.x,Wage_2016=Wage.y) %>% arrange(desc(Wage_2016))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
#2016-2017
(Players_2016 = Data_Set %>% filter(Season==2016) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2017=Data_Set %>% filter(Season==2017) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2016,Players_2017,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2016=O_Rating.x,PR_2016=P_Rating.x,OR_2017=O_Rating.y,PR_2017=P_Rating.y,Wage_2016=Wage.x,Wage_2017=Wage.y) %>% arrange(desc(Wage_2017))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2016,y=OR_2017 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2016", y="Current Rating in 2017") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
#2017-2018
(Players_2017 = Data_Set %>% filter(Season==2017) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2018=Data_Set %>% filter(Season==2018) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2017,Players_2018,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2017=O_Rating.x,PR_2017=P_Rating.x,OR_2018=O_Rating.y,PR_2018=P_Rating.y,Wage_2017=Wage.x,Wage_2018=Wage.y) %>% arrange(desc(Wage_2018))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2017,y=OR_2018 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2017", y="Current Rating in 2018") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
#2018-2019
(Players_2018 = Data_Set %>% filter(Season==2018) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2019=Data_Set %>% filter(Season==2019) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2018,Players_2019,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2018=O_Rating.x,PR_2018=P_Rating.x,OR_2019=O_Rating.y,PR_2019=P_Rating.y,Wage_2018=Wage.x,Wage_2019=Wage.y) %>% arrange(desc(Wage_2019))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2018,y=OR_2019 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2018", y="Current Rating in 2019") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred")) + scale_y_continuous(trans = "log"
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred")) + scale_y_continuous(trans = "log")
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
(Players_2015 = Data_Set %>% filter(Season==2015) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2016=Data_Set %>% filter(Season==2016) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2015,Players_2016,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2015=O_Rating.x,PR_2015=P_Rating.x,OR_2016=O_Rating.y,PR_2016=P_Rating.y,Wage_2015=Wage.x,Wage_2016=Wage.y) %>% arrange(desc(Wage_2016))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred")) + scale_y_continuous(trans = "log")
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred")) + scale_x_continuous(name="Speed of cars",breaks=2.5, limits=c(75, 100))
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred")) + scale_x_continuous(name="Speed of cars",breaks=10, limits=c(75, 100))
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
Data_Set
Data_Set %>% group_by(Position) %>% summarise(avg_wage= mean(Wage))
Data_Set %>% group_by(Position) %>% summarise(avg_wage= mean(Wage,na.rm = TRUE))
Data_Set %>% group_by(Position,Season) %>% summarise(avg_wage= mean(Wage,na.rm = TRUE))
POs_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_wage= mean(Wage,na.rm = TRUE)) %>% arrange(desc(Avg_Wage))
POs_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE)) %>% arrange(desc(Avg_Wage))
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE)) %>% arrange(desc(Avg_Wage))
Pos_Wage
ggplot(data = Pos_Wage, aes(y=Avg_Wage))
ggplot(data = Pos_Wage, aes(y=Avg_Wage))+ scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(y=Avg_Wage),color=Position,size=Season)+ scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Season,y=Avg_Wage),color=Position)+ scale_y_continuous(name="Wage", labels = scales::comma)
Pos_Wage
ggplot(data = Pos_Wage, aes(x=Season,y=Avg_Wage),color=Position)+ geom_point + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Season,y=Avg_Wage),color=Position)+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage),color=Season)+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,size=Season))+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma) + facet_wrap(~Season)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma) + facet_wrap(~Season)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma) + facet_wrap(~Position)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_point() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_line() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_plot() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_area() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_bind2() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage,color=Season))+ geom_contour() + scale_y_continuous(name="Wage", labels = scales::comma)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_contour() + scale_y_continuous(name="Wage", labels = scales::comma) + geom_jitter(aes(col=Season)) +
geom_smooth(aes(col=Season), method="lm", se=F)
Data_Set
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_contour() + scale_y_continuous(name="Wage", labels = scales::comma) + geom_jitter(aes(col=Season, size=Market_Value)) +
geom_smooth(aes(col=Season), method="lm", se=F)
Data_Set
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE)) %>% dplyr::select(Market_Value) %>% arrange(desc(Avg_Wage))
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE)) %>% dplyr::select("Market_Value") %>% arrange(desc(Avg_Wage))
Data_Set
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value)) %>% arrange(desc(Avg_Wage, Avg_Market_Value))
Pos_Wage
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value,na.rm=TRUE)) %>% arrange(desc(Avg_Wage, Avg_Market_Value))
Pos_Wage
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_contour() + scale_y_continuous(name="Wage", labels = scales::comma) + geom_jitter(aes(col=Season, size=Avg_Market_Value)) +
geom_smooth(aes(col=Season), method="lm", se=F)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_contour() + scale_y_continuous(name="Wage", labels = scales::comma) + geom_jitter(aes(col=Season, size=Avg_Market_Value)) +
geom_smooth(aes(col=Season), method="lm", se=F)
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_contour() + scale_y_continuous(name="Wage", labels = scales::comma) + geom_jitter(aes(color=Season, size=Avg_Market_Value)) +
geom_smooth(aes(color=Season), method="lm", se=F)
g <- ggplot(gapminder, aes(Avg_Wage, Avg_Market_Value, frame = Season)) +
geom_point() +
geom_smooth(aes(group = Season),
method = "lm",
show.legend = FALSE) +
facet_wrap(~Position, scales = "free") +
scale_x_log10()
g <- ggplot(Pos_Wage, aes(Avg_Wage, Avg_Market_Value, frame = Season)) +
geom_point() +
geom_smooth(aes(group = Season),
method = "lm",
show.legend = FALSE) +
facet_wrap(~Position, scales = "free") +
scale_x_log10()  # convert to log scale
gganimate(g, interval=0.2)
install.packages("gganimate")
require(gganimate)
gganimate(g, interval=0.2)
install.packages("cowplot")  # a gganimate dependency
devtools::install_github("dgrtwo/gganimate")
gganimate(g, interval=0.2)
devtools::install_github("https://github.com/thomasp85/gganimate/releases/tag/v0.1.1")
gganimate(g, interval=0.2)
library(ggplot2)
library(gganimate)
theme_set(theme_bw())
gganimate(g, interval=0.2)
devtools::install_github('thomasp85/gganimate')
library(ggplot2)
library(gganimate)
theme_set(theme_bw())
gganimate(g, interval=0.2)
animate(g, interval=0.2)
gganimate(g, interval=0.2)
remove.packages("gganimate")
gganimate(g, interval=0.2)
devtools::install_github("nteetor/gganimate")
gganimate(g, interval=0.2)
gganimate::gg_animate(g, interval=0.2)
devtools::install_github("https://github.com/thomasp85/gganimate")
gganimate::gg_animate(g, interval=0.2)
library(ggplot2)
library(gganimate)
theme_set(theme_bw())
gganimate::gg_animate(g, interval=0.2)
devtools::install_github("thomasp85/tweenr")
library(ggplot2)
library(gganimate)
gganimate::gg_animate(g, interval=0.2)
g
g <- ggplot(Pos_Wage, aes(Avg_Wage, Avg_Market_Value, frame = Season)) +
geom_point() +
geom_smooth(aes(group = Season),
method = "lm",
show.legend = FALSE) +
facet_wrap(~Position, scales = "free") +
scale_x_log10()  # convert to log scale
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value,na.rm=TRUE)) %>% arrange(desc(Avg_Wage, Avg_Market_Value))
library(tidyselect)
require(tidyverse)
require(ggplot2)
require(compare)
require("gridExtra")
require(xlsx)
require(lattice)
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value,na.rm=TRUE)) %>% arrange(desc(Avg_Wage, Avg_Market_Value))
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
library(readxl)
Season_15 <- read_excel("Data_Sets/Season_15.xlsx")
library(readxl)
Season_15 <- read_excel("Data Sets/Season_15.xlsx")
View(Season_15)
library(readxl)
Season_16 <- read_excel("Data Sets/Season_16.xlsx")
View(Season_16)
library(readxl)
Season_17 <- read_excel("Data Sets/Season_17.xlsx")
View(Season_17)
library(readxl)
Season_18 <- read_excel("Data Sets/Season_18.xlsx")
View(Season_18)
library(readxl)
Season_19 <- read_excel("Data Sets/Season_19.xlsx")
View(Season_19)
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS2 <- merge(DS3,Season_17,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS1 <- merge(DS2,Season_18,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
(Data_Set <- merge(DS1,Season_19,all.x=TRUE,all.y=TRUE)) %>% arrange(desc(O_Rating))
# Few entries for market_value and wage have entries as zero. Changing them to NA to perform na.rm operations
Data_Set$Market_Value[ Data_Set$Market_Value== 0] <- NA
Data_Set$Wage[ Data_Set$Wage== 0] <- NA
Data_Set <- Data_Set %>% arrange(desc(O_Rating))
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value,na.rm=TRUE)) %>% arrange(desc(Avg_Wage, Avg_Market_Value))
ggplot(data = Pos_Wage, aes(x=Position,y=Avg_Wage))+ geom_contour() + scale_y_continuous(name="Wage", labels = scales::comma) + geom_jitter(aes(color=Season, size=Avg_Market_Value)) +
geom_smooth(aes(color=Season), method="lm", se=F)
g <- ggplot(Pos_Wage, aes(Avg_Wage, Avg_Market_Value, frame = Season)) +
geom_point() +
geom_smooth(aes(group = Season),
method = "lm",
show.legend = FALSE) +
facet_wrap(~Position, scales = "free") +
scale_x_log10()  # convert to log scale
g
gganimate::gg_animate(g, interval=0.2)
devtools::install_github("thomasp85/transformr")
cor(DS3$O_Rating,DS3$Maturity)
DS <- merge(Age_23_15,Age_24_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
install.packages("tidyverse")
install.packages("rvest")
install.packages("devtools")
install.packages("xlsx")
install.packages("leaps")
DS <- merge(Age_23_15,Age_24_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
library(tidyverse)
library(rvest)
library(devtools)
library(xlsx)
require(leaps)
DS <- merge(Age_23_15,Age_24_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
library(readxl)
Age_23_15 <- read_excel("Model_Data/Age_23_15.xlsx")
library(readxl)
Age_24_16 <- read_excel("Model_Data/Age_24_16.xlsx")
library(readxl)
Age_25_17 <- read_excel("Model_Data/Age_25_17.xlsx")
library(readxl)
Age_26_18 <- read_excel("Model_Data/Age_26_18.xlsx")
library(readxl)
Age_27_19 <- read_excel("Model_Data/Age_27_19.xlsx")
DS <- merge(Age_23_15,Age_24_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS1 <- merge(DS,Age_25_17,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS2 <- merge(DS1,Age_26_18,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
(DS3 <- merge(DS2,Age_27_19,all.x=TRUE,all.y=TRUE)) %>% arrange(desc(O_Rating))
(Age_Overall_Rating <- cor(DS3$O_Rating,DS3$Age))
cor(DS3$O_Rating,DS3$Maturity)
cor(DS3$O_Rating,DS3$Growth)
cor(DS3$O_Rating,DS3$Market_Value)
cor(DS3$P_Rating,DS3$Wage)
xyplot(O_Rating~Maturity,data=DS3)
require(lattice)
xyplot(O_Rating~Maturity,data=DS3)
xyplot(O_Rating~Wage,data=DS3)
xyplot(O_Rating~Age,data=DS3)
xyplot(O_Rating~Growth,data=DS3)
xyplot(O_Rating~Market_Value,data=DS)
lps=regsubsets(O_Rating~Wage + Maturity + Age + Growth + Market_Value, data=DS3, method='backward')
plot(lps, scale="adjr2" )
mod1 <- lm(O_Rating~Wage+Maturity+Age+Market_Value,data=DS3)
summary(mod1)
plot(mod1)
Pred_Values=data.frame(Age=28,Market_Value=8950000000,Wage=270000,Maturity=84)
predict(mod2,Pred_Values)
Pred_Values=data.frame(Age=28,Market_Value=8950000000,Wage=270000,Maturity=84)
predict(mod1,Pred_Values)
library(readxl)
Season_15 <- read_excel("Data Sets/Season_15.xlsx")
library(readxl)
Season_16 <- read_excel("Data Sets/Season_16.xlsx")
library(readxl)
Season_17 <- read_excel("Data Sets/Season_17.xlsx")
library(readxl)
Season_18 <- read_excel("Data Sets/Season_18.xlsx")
library(readxl)
Season_19 <- read_excel("Data Sets/Season_19.xlsx")
Season_15
library(readxl)
Season_15 <- read_excel("Data Sets/Season_15.xlsx")
library(readxl)
Season_16 <- read_excel("Data Sets/Season_16.xlsx")
library(readxl)
Season_17 <- read_excel("Data Sets/Season_17.xlsx")
library(readxl)
Season_18 <- read_excel("Data Sets/Season_18.xlsx")
library(readxl)
Season_19 <- read_excel("Data Sets/Season_19.xlsx")
#Combining all seasons together.
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
library(tidyselect)
#Combining all seasons together.
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
require(tidyverse)
DS3 <- merge(Season_15,Season_16,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS2 <- merge(DS3,Season_17,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
DS1 <- merge(DS2,Season_18,all.x=TRUE,all.y=TRUE) %>% arrange(desc(O_Rating))
(Data_Set <- merge(DS1,Season_19,all.x=TRUE,all.y=TRUE)) %>% arrange(desc(O_Rating))
# Few entries for market_value and wage have entries as zero. Changing them to NA to perform na.rm operations
Data_Set$Market_Value[ Data_Set$Market_Value== 0] <- NA
Data_Set$Wage[ Data_Set$Wage== 0] <- NA
Data_Set <- Data_Set %>% arrange(desc(O_Rating))
Data_Set
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value,na.rm=TRUE)) %>% arrange(desc(Avg_Wage))
p <- ggplot(Pos_Wage, aes(Avg_Wage, Avg_Market_Value, color = Position)) +
geom_point(aes(frame = Season)) + scale_y_continuous(name="Avg_Market_Value", labels = scales::comma) + scale_x_continuous(name="Avg_Wage", labels = scales::comma)
p <- p %>%
animation_opts(
1000, easing = "elastic", redraw = FALSE
)
library(tidyselect)
require(tidyverse)
require(ggplot2)
require(compare)
require("gridExtra")
require(xlsx)
require(lattice)
require(Scale)
require(MASS)
require(dplyr)
library(plotly)
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value,na.rm=TRUE)) %>% arrange(desc(Avg_Wage))
p <- ggplot(Pos_Wage, aes(Avg_Wage, Avg_Market_Value, color = Position)) +
geom_point(aes(frame = Season)) + scale_y_continuous(name="Avg_Market_Value", labels = scales::comma) + scale_x_continuous(name="Avg_Wage", labels = scales::comma)
p <- p %>%
animation_opts(
1000, easing = "elastic", redraw = FALSE
)
(p <- ggplotly(p))
#2015-2016
(Players_2015 = Data_Set %>% filter(Season==2015) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2016=Data_Set %>% filter(Season==2016) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2015,Players_2016,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2015=O_Rating.x,PR_2015=P_Rating.x,OR_2016=O_Rating.y,PR_2016=P_Rating.y,Wage_2015=Wage.x,Wage_2016=Wage.y) %>% arrange(desc(Wage_2016))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2015,y=OR_2016 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2015", y="Current Rating in 2016") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
#2016-2017
(Players_2016 = Data_Set %>% filter(Season==2016) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2017=Data_Set %>% filter(Season==2017) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2016,Players_2017,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2016=O_Rating.x,PR_2016=P_Rating.x,OR_2017=O_Rating.y,PR_2017=P_Rating.y,Wage_2016=Wage.x,Wage_2017=Wage.y) %>% arrange(desc(Wage_2017))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2016,y=OR_2017 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2016", y="Current Rating in 2017") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
#2017-2018
(Players_2017 = Data_Set %>% filter(Season==2017) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2018=Data_Set %>% filter(Season==2018) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2017,Players_2018,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2017=O_Rating.x,PR_2017=P_Rating.x,OR_2018=O_Rating.y,PR_2018=P_Rating.y,Wage_2017=Wage.x,Wage_2018=Wage.y) %>% arrange(desc(Wage_2018))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2017,y=OR_2018 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2017", y="Current Rating in 2018") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
#2018-2019
(Players_2018 = Data_Set %>% filter(Season==2018) %>% dplyr::select (Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Players_2019=Data_Set %>% filter(Season==2019) %>% dplyr::select(Name,O_Rating,P_Rating,Wage) %>% arrange(desc(Wage)))
(Comparison <- merge(Players_2018,Players_2019,by="Name") %>% arrange(desc(Wage.x)))
(Top_Earning <- (Comparison %>% rename(OR_2018=O_Rating.x,PR_2018=P_Rating.x,OR_2019=O_Rating.y,PR_2019=P_Rating.y,Wage_2018=Wage.x,Wage_2019=Wage.y) %>% arrange(desc(Wage_2019))))
(Top_10 <- Top_Earning %>% head(10))
ggplot(Top_10, aes(x=PR_2018,y=OR_2019 )) +
geom_bar(aes(fill = Name), stat = "identity", position = "dodge")  + expand_limits(x=75,y=50) + labs(x="Potential Rating in 2018", y="Current Rating in 2019") + coord_cartesian(ylim = c(55,100)) + scale_fill_manual(values=c("mediumseagreen", "mediumslateblue","royalblue3", "indianred4","mediumturquoise", "plum4","mediumpurple4","palevioletred3", "mediumspringgreen","mediumvioletred"))
Pos_Wage <- Data_Set %>% group_by(Position,Season) %>% summarise(Avg_Wage= mean(Wage,na.rm = TRUE), Avg_Market_Value= mean(Market_Value,na.rm=TRUE)) %>% arrange(desc(Avg_Wage))
